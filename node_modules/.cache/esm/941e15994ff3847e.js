let passport,User,Strategy,ExtractJwt,secretOrKey;_4ff‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_4ff‍.w("../models",[["User",["User"],function(v){User=v}]]);_4ff‍.w("passport-jwt",[["Strategy",["Strategy"],function(v){Strategy=v}],["ExtractJwt",["ExtractJwt"],function(v){ExtractJwt=v}]]);_4ff‍.w("../constants",[["SECRET",["secretOrKey"],function(v){secretOrKey=v}]]);




const opts = {
    secretOrKey,
    jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),
  };

  passport.use(
    new Strategy(opts, async ({ id }, done) => {
      try {
        let user = await User.findById(id);
        if (!user) {
          throw new Error("User not found.");
        }
        return done(null, user.getUserInfo());
      } catch (err) {
        done(null, false);
      }
    })
  );