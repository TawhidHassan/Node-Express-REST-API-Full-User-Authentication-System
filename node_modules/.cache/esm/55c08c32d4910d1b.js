let cors,consola,express,mongoose,json,DB,userApis;_d49‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_d49‍.w("consola",[["default",["consola"],function(v){consola=v}]]);_d49‍.w("express",[["default",["express"],function(v){express=v}]]);_d49‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_d49‍.w("body-parser",[["json",["json"],function(v){json=v}]]);_d49‍.w("./constants",[["DB",["DB"],function(v){DB=v}]]);_d49‍.w("./apis/user",[["default",["userApis"],function(v){userApis=v}]]);





// Import Application Constants

const PORT=5000;
// Router exports


// Initialize express application
const app = express();

// Apply Application Middlewares
app.use(cors());
app.use(json());

// Inject Sub router and apis
app.use('/users',userApis);

const main =  () => {
  try {
    // Connect with the database
     mongoose.connect(DB, {
        //must add in order to not get any error masseges:
        useUnifiedTopology:true,
        useNewUrlParser: true,
        useCreateIndex: true
    });
    consola.success("DATABASE CONNECTED...");
    // Start application listening for request on server
    app.listen(PORT, () => consola.success(`Sever started on port ${PORT}`));
  } catch (err) {
    consola.error(`Unable to start the server \n${err.message}`);
  }
};

main();