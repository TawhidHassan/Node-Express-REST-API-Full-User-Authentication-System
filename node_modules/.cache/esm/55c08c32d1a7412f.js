let cors,consola,express,mongoose,passport,json,join,DB,userApis,postApis,profileApis;_d1a‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_d1a‍.w("consola",[["default",["consola"],function(v){consola=v}]]);_d1a‍.w("express",[["default",["express"],function(v){express=v}]]);_d1a‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_d1a‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_d1a‍.w("body-parser",[["json",["json"],function(v){json=v}]]);_d1a‍.w("path",[["join",["join"],function(v){join=v}]]);_d1a‍.w("./constants",[["DB",["DB"],function(v){DB=v}]]);_d1a‍.w("./apis/user",[["default",["userApis"],function(v){userApis=v}]]);_d1a‍.w("./apis/posts",[["default",["postApis"],function(v){postApis=v}]]);_d1a‍.w("./apis/profiles",[["default",["profileApis"],function(v){profileApis=v}]]);







// Import Application Constants

const PORT=5000;
// Router imports




// Import passport middleware
require("./middlewares/passport-middleware");

// Initialize express application
const app = express();

// Apply Application Middlewares
app.use(cors());
app.use(json());
app.use(passport.initialize());
app.use(express.static(join(__dirname, "./uploads")));
// Inject Sub router and apis
app.use('/users',userApis);
app.use("/profiles", profileApis);
app.use("/posts", postApis);

const main =  () => {
  try {
    // Connect with the database
     mongoose.connect(DB, {
        //must add in order to not get any error masseges:
        useUnifiedTopology:true,
        useNewUrlParser: true,
        useCreateIndex: true
    });
    consola.success("DATABASE CONNECTED...");
    // Start application listening for request on server
    app.listen(PORT, () => consola.success(`Sever started on port ${PORT}`));
  } catch (err) {
    consola.error(`Unable to start the server \n${err.message}`);
  }
};

main();