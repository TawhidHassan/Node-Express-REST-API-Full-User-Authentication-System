let Router,randomBytes,DOMAIN,User,validationResult,AuthenticateValidations,RegisterValidations,Validator,send;_d42‍.x([["default",()=>_d42‍.o]]);_d42‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_d42‍.w("crypto",[["randomBytes",["randomBytes"],function(v){randomBytes=v}]]);_d42‍.w("../constants",[["DOMAIN",["DOMAIN"],function(v){DOMAIN=v}]]);_d42‍.w("../models",[["User",["User"],function(v){User=v}]]);_d42‍.w("express-validator",[["validationResult",["validationResult"],function(v){validationResult=v}]]);_d42‍.w("../validators",[["AuthenticateValidations",["AuthenticateValidations"],function(v){AuthenticateValidations=v}],["RegisterValidations",["RegisterValidations"],function(v){RegisterValidations=v}]]);_d42‍.w("../middlewares/validator-middleware",[["default",["Validator"],function(v){Validator=v}]]);_d42‍.w("../functions/email-sender",[["default",["send"],function(v){send=v}]]);










const router = Router();

/**
 * @description To create a new User Account
 * @api /users/api/register
 * @access Public
 * @type POST
 */
 router.post("/api/register",RegisterValidations,Validator,async (req,res)=>{

   try{

    let { username, email } = req.body;
    // Check if the username is taken or not
    let user = await User.findOne({ username });
    if (user) {
      return res.status(400).json({
        success: false,
        message: "Username is already taken.",
      });
    }
    // Check if the user exists with that email
    user = await User.findOne({ email });
    if (user) {
      return res.status(400).json({
        success: false,
        message:
          "Email is already registered. Did you forget the password. Try resetting it.",
      });
    }

    user = new User({
        ...req.body,
        verificationCode: randomBytes(20).toString("hex"),
      });
      await user.save();
    // Send the email to the user with a varification link
    let html = `
    <div>
        <h1>Hello, ${user.username}</h1>
        <p>Please click the following link to verify your account</p>
        <a href="${DOMAIN}users/verify-now/${user.verificationCode}">Verify Now</a>
    </div>
    `;
    //send maill
     send;
      return res.status(201).json({
        success: true,
        message:
          "Hurray! your account is created please verify your email address.",
      });



   }catch(err){
    _d42‍.g.console.log(err)
    return res.status(500).json({
        success:false,
        message:"an error occored"
    })
   }

 });


_d42‍.d(router);